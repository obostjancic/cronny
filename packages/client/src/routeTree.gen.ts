/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ClientsIndexImport } from './routes/clients/index'
import { Route as JobsNewImport } from './routes/jobs/new'
import { Route as ClientsClientIdImport } from './routes/clients/$clientId'
import { Route as JobsJobIdIndexImport } from './routes/jobs/$jobId/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ClientsIndexRoute = ClientsIndexImport.update({
  path: '/clients/',
  getParentRoute: () => rootRoute,
} as any)

const JobsNewRoute = JobsNewImport.update({
  path: '/jobs/new',
  getParentRoute: () => rootRoute,
} as any)

const ClientsClientIdRoute = ClientsClientIdImport.update({
  path: '/clients/$clientId',
  getParentRoute: () => rootRoute,
} as any)

const JobsJobIdIndexRoute = JobsJobIdIndexImport.update({
  path: '/jobs/$jobId/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/clients/$clientId': {
      id: '/clients/$clientId'
      path: '/clients/$clientId'
      fullPath: '/clients/$clientId'
      preLoaderRoute: typeof ClientsClientIdImport
      parentRoute: typeof rootRoute
    }
    '/jobs/new': {
      id: '/jobs/new'
      path: '/jobs/new'
      fullPath: '/jobs/new'
      preLoaderRoute: typeof JobsNewImport
      parentRoute: typeof rootRoute
    }
    '/clients/': {
      id: '/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/jobs/$jobId/': {
      id: '/jobs/$jobId/'
      path: '/jobs/$jobId'
      fullPath: '/jobs/$jobId'
      preLoaderRoute: typeof JobsJobIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ClientsClientIdRoute,
  JobsNewRoute,
  ClientsIndexRoute,
  JobsJobIdIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/clients/$clientId",
        "/jobs/new",
        "/clients/",
        "/jobs/$jobId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/clients/$clientId": {
      "filePath": "clients/$clientId.tsx"
    },
    "/jobs/new": {
      "filePath": "jobs/new.tsx"
    },
    "/clients/": {
      "filePath": "clients/index.tsx"
    },
    "/jobs/$jobId/": {
      "filePath": "jobs/$jobId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
